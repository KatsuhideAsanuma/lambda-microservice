[package]
name = "lambda-microservice-controller"
version = "0.2.0"
edition = "2021"
authors = ["Lambda Microservice Team"]
description = "Modern Rust controller for lambda microservice infrastructure"
rust-version = "1.75.0"

[dependencies]
# Web framework - Updated to modern versions
actix-web = "4.4"
actix-cors = "0.7"
actix-rt = "2.9"

# Serialization/Deserialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Database - Unified with SQLx
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid", "json", "migrate"] }
tokio-postgres = { version = "0.7", features = ["with-chrono-0_4", "with-serde_json-1"] }
deadpool-postgres = "0.10"
postgres-types = { version = "0.2", features = ["derive", "with-chrono-0_4", "with-serde_json-1", "with-uuid-1"] }

# Redis - Restored with modern versions
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }
deadpool-redis = "0.14"

# HTTP client
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }

# Async runtime - Updated
tokio = { version = "1.35", features = ["full"] }
futures = "0.3"

# Logging and tracing - Restored
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-actix-web = "0.7"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
config = "0.14"
sha2 = "0.10"
hex = "0.4"
async-trait = "0.1"
once_cell = "1.19"
regex = "1.10"
tokio-retry = "0.3"
rand = "0.8"

# WebAssembly support - Restored with modern versions
wasmtime = { version = "15.0", optional = true }
wasmtime-wasi = { version = "15.0", optional = true }
tempfile = "3.8"

# gRPC support - Restored with modern versions
tonic = { version = "0.10", optional = true }
prost = { version = "0.12", optional = true }

# Kubernetes support - Restored with modern versions
kube = { version = "0.87", features = ["runtime", "derive"], optional = true }
k8s-openapi = { version = "0.20", features = ["v1_28"], optional = true }

# Additional utilities for modern Rust
dashmap = "5.5"  # Concurrent HashMap
parking_lot = "0.12"  # Better mutexes
bytes = "1.5"
dotenv = "0.15"  # Environment variable loading

[build-dependencies]
tonic-build = { version = "0.10", optional = true }

[dev-dependencies]
mockall = "0.12"
tokio-test = "0.4"
tempfile = "3.8"
serial_test = "3.0"

[features]
default = ["webassembly", "grpc", "kubernetes"]

# Feature flags for optional functionality
webassembly = ["wasmtime", "wasmtime-wasi"]
grpc = ["tonic", "prost", "tonic-build"]
kubernetes = ["kube", "k8s-openapi"]

# Test features
test-integration = []
mock-kubernetes = []
test-isolated = []

# Performance features
performance = []

# Security features
security-enhanced = []

[[bin]]
name = "lambda-microservice-controller"
path = "src/main.rs"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true
