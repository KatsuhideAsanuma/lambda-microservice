apiVersion: apps/v1
kind: Deployment
metadata:
  name: lambda-python-runtime
  namespace: lambda-microservice
  labels:
    app: lambda-python-runtime
spec:
  replicas: 2
  selector:
    matchLabels:
      app: lambda-python-runtime
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: lambda-python-runtime
    spec:
      containers:
      - name: python-runtime
        image: ${REGISTRY}/lambda-microservice-python-runtime:${TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
